<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project.mapper.UserMapper">
    <insert id="insertUser" parameterType="CreateUserDTO">
        insert into user(email, id, phone_num, name, password, sigungu_cd)
        values(#{email}, #{id}, #{phone_num}, #{name}, #{password}, #{sigungu_cd})
    </insert>
    <select id="findById" parameterType="string" resultType="LoginResultDTO">
        select * from user
        where id = #{id}
    </select>
    <select id="findByEmail" parameterType="string" resultType="string">
        select email from user
        where email = #{email}
    </select>
    <select id="loginUser" parameterType="string" resultType="string">
        select name from user
        where id = #{id}
        and password = #{password}
    </select>
    <delete id="deleteUser" parameterType="long">
        delete from user where user_seq = #{user_seq}
    </delete>
    <select id="findFollow" parameterType="FollowDTO" resultType="int">
        select count(*)
        from follower
        where follower_user_seq = #{user_seq}
        and following_user_seq = #{following_user_seq}
    </select>
    <insert id="insertFollow" parameterType="FollowDTO">
        insert into follower(follower_user_seq, following_user_seq)
        values(#{user_seq}, #{following_user_seq})
    </insert>
    <delete id="deleteFollow" parameterType="FollowDTO">
        delete from follower
        where follower_user_seq = #{user_seq}
        and following_user_seq = #{following_user_seq}
    </delete>

    <select id="findProfile" parameterType="string" resultType="ProfileDTO">
        SELECT A.*, B.post_count, C.follower, D.following
        FROM (
        SELECT U.user_seq, U.id, U.name
        FROM user U
        WHERE U.id = "${id}"
        ) A
        LEFT JOIN (
        SELECT R.user_seq, COUNT(R.review_seq) AS post_count
        FROM review R
        GROUP BY R.user_seq
        ) B ON A.user_seq = B.user_seq
        LEFT JOIN (
        SELECT F.following_user_seq, COUNT(F.following_user_seq) AS follower
        FROM follower F
        GROUP BY F.following_user_seq
        ) C ON A.user_seq = C.following_user_seq
        LEFT JOIN (
        SELECT F.follower_user_seq, COUNT(F.follower_user_seq) AS following
        FROM follower F
        GROUP BY F.follower_user_seq
        ) D ON A.user_seq = D.follower_user_seq;
    </select>
</mapper>


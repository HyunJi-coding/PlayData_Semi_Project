<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project.mapper.UserMapper">
    <insert id="insertUser" parameterType="CreateUserDTO">
        insert into user(email, id, phone_num, name, password, sigungu_cd)
        values(#{email}, #{id}, #{phone_num}, #{name}, #{password}, #{sigungu_cd})
    </insert>
    <select id="findById" parameterType="string" resultType="LoginResultDTO">
        select * from user
        where id = #{id}
    </select>
    <select id="findByEmail" parameterType="string" resultType="string">
        select email from user
        where email = #{email}
    </select>
    <select id="loginUser" parameterType="string" resultType="string">
        select name from user
        where id = #{id}
        and password = #{password}
    </select>
    <delete id="deleteUser" parameterType="long">
        delete from user where user_seq = #{user_seq}
    </delete>
    <select id="findFollow" parameterType="FollowDTO" resultType="int">
        select count(*)
        from follower
        where follower_user_seq = #{user_seq}
        and following_user_seq = #{following_user_seq}
    </select>
    <insert id="insertFollow" parameterType="FollowDTO">
        insert into follower(follower_user_seq, following_user_seq)
        values(#{user_seq}, #{following_user_seq})
    </insert>
    <delete id="deleteFollow" parameterType="FollowDTO">
        delete from follower
        where follower_user_seq = #{user_seq}
        and following_user_seq = #{following_user_seq}
    </delete>

    <select id="findProfile" parameterType="string" resultType="ProfileDTO">
        SELECT A.*,
        COALESCE(B.post_count, 0) AS post_count,
        COALESCE(C.follower, 0) AS follower,
        COALESCE(D.following, 0) AS following
        FROM (
        SELECT U.user_seq, U.id, U.name
        FROM user U
        WHERE U.id = "${id}"
        ) A
        LEFT JOIN (
        SELECT R.user_seq, COUNT(R.review_seq) AS post_count
        FROM review R
        GROUP BY R.user_seq
        ) B ON A.user_seq = B.user_seq
        LEFT JOIN (
        SELECT F.following_user_seq, COUNT(F.following_user_seq) AS follower
        FROM follower F
        GROUP BY F.following_user_seq
        ) C ON A.user_seq = C.following_user_seq
        LEFT JOIN (
        SELECT F.follower_user_seq, COUNT(F.follower_user_seq) AS following
        FROM follower F
        GROUP BY F.follower_user_seq
        ) D ON A.user_seq = D.follower_user_seq;
    </select>

    <select id="myfeedlist" parameterType="string" resultType="UserfeedDTO">
        select
        r.review_seq,
        r.img_1,
        coalesce(rc.comment_cnt, 0) as comment_cnt,
        coalesce(rr.recommend_cnt, 0) as recommend_cnt
        from review r
        left join (
        select review_seq, COUNT(*) as comment_cnt
        from review_comment
        group by review_seq
        ) rc on r.review_seq = rc.review_seq
        left join (
        select b.review_seq, count(*) as recommend_cnt
        from review_recommand a
        join review b on a.review_seq = b.review_seq
        group by b.review_seq
        ) rr on r.review_seq = rr.review_seq
        join user u on r.user_seq = u.user_seq
        where u.id = #{u.id};
    </select>

    <select id="followinglist" parameterType="Long" resultType="FollowlistDTO">
<!--        팔로잉-->
        select u.email, u.id, u.name, u.user_seq ,f.following_user_seq ,f.follower_user_seq
        from follower f
        join user u on f.following_user_seq = u.user_seq
        where f.follower_user_seq = #{follower_user_seq};
    </select>

    <select id="followerlist" parameterType="Long" resultType="FollowlistDTO">
<!--        팔로워-->
        select u.email, u.id, u.name, u.user_seq ,f.following_user_seq ,f.follower_user_seq
        from follower f
        join user u on f.follower_user_seq = u.user_seq
        where f.following_user_seq = #{following_user_seq};
    </select>
</mapper>


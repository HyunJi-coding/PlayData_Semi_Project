<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project.mapper.BoardMapper">

<!--    DTO를 사용함으로 resultMap 사용 보류-->
    <resultMap type="UserDTO" id="UserDTO">
        <result column="user_seq" property="user_seq"/>
        <result column="email" property="email"/>
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="sigungu_cd" property="sigungu_cd"/>
    </resultMap>

    <resultMap type="ContentDTO" id="ContentDTO">
        <result column="review_seq" property="review_seq"/>
        <result column="title" property="title"/>
        <result column="view_count" property="view_count"/>
        <result column="star" property="star"/>
        <result column="img_1" property="img_1"/>
        <result column="created_at" property="created_at"/>
        <collection property="UserDTO" resultMap="UserDTO"/>
    </resultMap>

    <select id="getContentList" parameterType="RequestContentDTO" resultType="ContentDTO">
        select
        U.name,
        R.review_seq,
        R.title,
        R.view_count,
        R.star,
        R.img_1,
        R.created_at
        from
        user U join review R <!--join follower F-->
        on U.user_seq = R.user_seq
        <if test='#{searchtype}!=null and !#{searchtype}.equals("")'>
<!--
                JOIN Follower F ON U.user_seq = F.follower_user_seq
                where F.following_user_seq = #{user_seq}
-->
            where R.title like CONCAT('%', #{keyword}, '%') OR R.content like CONCAT('%', #{keyword}, '%')
        </if>
<!--
        <if test='#{keyword} != "" and #{keyword} != null '>
                where R.title like CONCAT('%', #{keyword}, '%') OR R.content like CONCAT('%', #{keyword}, '%')
        </if>
-->

<!--
        태그에 담겨올 List<String>도 처리할 방법 필요
-->
        ORDER BY R.review_seq DESC
        limit #{curPage}, #{cutPage}

    </select>


    <insert id="upsertMarketList"  parameterType="java.util.List">
        insert into market (market_id,name,category_cd,point_xy,phone_num,image_url,address_name,road_address_name,
        place_url,sigungu_cd)
        values
        <foreach collection="list" item="item" separator=",">
            (
                #{item.id},
                #{item}

            )
        </foreach>
    </insert>
    
    

    <select id="getTagList" resultType="TagDTO">
        select code,cd_name,use_yn from tag_cd where use_yn = 'Y'
    </select>
</mapper>

